<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><title>Create a Drawing App with HTML5 Canvas and JavaScript { William Malone }</title>
<meta charset="utf-8">
<meta name="author" content="William Malone">
<meta name="robots" content="all">
<meta name="description" content="William Malone: This tutorial will take you step by step through the development of a simple web drawing application using HTML5 canvas and its partner JavaScript.">
<meta name="keywords" content="william malone, html5, html 5, canvas, Javascript, drawing, tutorial">
<meta name="google-site-verification" content="_ZhRA0bW6z6apt-XLC3jZAWzcUfbMKx8CUeav60q7lg">
<meta name="viewport" content="width=device-width,minimum-scale=1,maximum-scale=1">

     
<link rel="shortcut icon" type="image/x-icon" href="http://seed1.watermelonduck.com/favicon.ico">
<link rel="image_src" href="http://www.williammalone.com/articles/create-html5-canvas-javascript-drawing-app/images/thumbnail.jpg">    
<link href="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/css.css" rel="stylesheet" type="text/css">
<link media="screen, projection" rel="stylesheet" type="text/css" href="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/style_002.css">
<link rel="index" title="William Malone" href="http://www.williammalone.com/">
<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/williamMalone">

<link rel="stylesheet" href="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/article.css" media="screen, projection"><link rel="stylesheet" href="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/style.css" media="screen, projection"><link rel="stylesheet" href="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/print.css" media="print">    
<script async="" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/cbgapi.loaded_1"></script><script async="" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/cbgapi.loaded_0"></script><script src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">var _gaq = _gaq || [];_gaq.push(['_setAccount', 'UA-9566612-1']);_gaq.push(['_trackPageview']);</script>
<!--[if lt IE 9]><script src="http://quack.watermelonduck.com/scripts/html5.js"></script><![endif]-->
      
<!--[if IE]><script src="http://quack.watermelonduck.com/scripts/excanvas.js"></script><![endif]--><script type="text/javascript">var articleDescription="This tutorial will take you step by step through the development of a simple web drawing application using HTML5 canvas and its partner JavaScript.";var thumbnailurl="http://www.williammalone.com/articles/create-html5-canvas-javascript-drawing-app/images/thumbnail.jpg";var isIPhoneFormat = false;var pageName = "Create a Drawing App with HTML5 Canvas and JavaScript";
			function jQueryLoaded() {		// quit if this function has already been called 
				if (arguments.callee.done) return;
				// flag this function so we don't do the same thing twice
				arguments.callee.done = true;
				var rootElement = document.createElement("script");
				rootElement.type = "text/javascript";
				rootElement.src = "http://quack.watermelonduck.com/scripts/root.js";
				document.body.appendChild(rootElement);	
				var specificScriptElement = document.createElement("script");
				specificScriptElement.type = "text/javascript";
				specificScriptElement.src = "scripts/javascript.js";
				document.body.appendChild(specificScriptElement);						
				var articleElement = document.createElement("script");
				articleElement.type = "text/javascript";
				articleElement.src = "http://quack.watermelonduck.com/scripts/article.js";
				document.body.appendChild(articleElement);						
				var plusOneElement = document.createElement("script");
				plusOneElement.type = "text/javascript";
				plusOneElement.src = "https://apis.google.com/js/plusone.js";
				document.body.appendChild(plusOneElement);
				plusOneElement.onreadystatechange = function () {
					if(this.readyState == "loaded" || this.readyState == "complete"){ plusOneLoaded(); }
				}
				plusOneElement.onload = plusOneLoaded;
			}
			function plusOneLoaded() {
				window.gapi.plusone.render("googlePlusOneDiv", {"size": "medium", "count": "true"});
			}
			function swfObjectLoaded() {
	
				//var flashScriptElement = document.createElement("script");
					//flashScriptElement.type = "text/javascript";
					//flashScriptElement.src = "http://quack.watermelonduck.com/scripts/flash.js";
					//document.body.appendChild(flashScriptElement);
			}
			function downloadJSAtOnload() {
				var jqueryElement = document.createElement("script");
				jqueryElement.type = "text/javascript";
				jqueryElement.src = "http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.js";		
				
				jqueryElement.onreadystatechange = function () {
					if(this.readyState == "loaded" || this.readyState == "complete"){ jQueryLoaded(); }
				}
				jqueryElement.onload = jQueryLoaded;
				
				document.body.appendChild(jqueryElement);			

				var swfobjectElement = document.createElement("script");
				swfobjectElement.type = "text/javascript";
				swfobjectElement.src = "http://quack.watermelonduck.com/scripts/swfobject.js";
				
				swfobjectElement.onreadystatechange= function () {
					if (this.readyState == "complete") swfObjectLoaded();
				}
				swfobjectElement.onload = swfObjectLoaded;
				document.body.appendChild(swfobjectElement);	
				var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
				ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
				var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			} // end function downloadJSAtOnload

			// Check for browser support of event handling capability
			if (window.addEventListener){
				window.addEventListener("load", downloadJSAtOnload, false);
			}else if (window.attachEvent){
				window.attachEvent("onload", downloadJSAtOnload);
			}else{window.onload = downloadJSAtOnload;}</script></head>

<body id="CreateaDrawingAppwithHTML5CanvasandJavaScriptPage" class="CreateaDrawingAppwithHTML5CanvasandJavaScript">

    <div id="page">
        <header role="banner">
            
            <a href="http://www.williammalone.com/" id="williamMaloneLogo" rel="me home" title="William Malone"></a>
            
            <ul id="nav">
                <li id="homeLink" class="navLink"><a href="http://www.williammalone.com/" rel="home" title="home"></a></li><li id="articlesLinkDown" class="navLink navDown"><a href="http://www.williammalone.com/articles/" title="articles"></a></li><li id="worksLink" class="navLink"><a href="http://www.williammalone.com/works/" title="works"></a></li><li id="aboutLink" class="navLink"><a href="http://www.williammalone.com/about/" title="about"></a></li><li id="contactLink" class="navLink"><a href="http://www.williammalone.com/contact/" title="contact"></a></li>                </ul>
            <div class="clear"></div> 

            
			<div id="underNav"><img id="underNavLeft" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/head_nav_left.png" alt="" height="35px" width="20px"><img id="underNavRight" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/head_nav_right.png" alt="" height="35px" width="20px"><div id="underNavCenter"><img style="visibility: visible; margin-left: 362px;" id="navDownIcon" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/head_nav_down.png" alt="" height="35px" width="24px"><img style="visibility: hidden; margin-top: -35px;" id="navOverIcon" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/head_nav_over.png" alt="" height="35px" width="36px"></div></div><div class="clear"></div>  
</header>      

<div id="content" role="main">
            <div id="contentWrapper">
                <div id="contentColorWrapper">
                        <aside id="contentLeft"><a class="img profileImg" href="http://www.williammalone.com/about/" title="William Malone"></a></aside><aside id="contentRight"><div id="followMe"><a href="http://twitter.com/williamMalone" target="_blank" rel="me" title="Follow Me on Twitter"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/follow-me-on-twitter.png" alt="Follow Me" height="25" width="215"></a></div><div id="rss"><a href="http://feeds.feedburner.com/williamMalone" target="_blank" rel="me" title="Subscribe to RSS"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/subscribe-rss.png" alt="Follow Me" height="25" width="215"></a></div><section id="relatedArticles"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/related-articles.png" alt="Related Articles" height="25px" width="215px"><ul><li class="relatedArticle roundedBox"><a href="http://www.williammalone.com/articles/html5-canvas-javascript-paint-bucket-tool" title="HTML5 Canvas Paint Bucket" class="subtleLink relatedArticleTitle">HTML5 Canvas Paint Bucket</a><a href="http://www.williammalone.com/articles/html5-canvas-javascript-paint-bucket-tool" title="HTML5 Canvas Paint Bucket"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/thumbnail_002.jpg"></a></li><li class="relatedArticle roundedBox"><a href="http://www.williammalone.com/articles/create-html5-canvas-javascript-sprite-animation" title="HTML5 Sprite Animation Tutorial" class="subtleLink relatedArticleTitle">HTML5 Sprite Animation Tutorial</a><a href="http://www.williammalone.com/articles/create-html5-canvas-javascript-sprite-animation" title="HTML5 Sprite Animation Tutorial"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/thumbnail.jpg"></a></li><li class="relatedArticle roundedBox"><a href="http://www.williammalone.com/articles/create-html5-canvas-javascript-game-character" title="HTML5 Game Character" class="subtleLink relatedArticleTitle">HTML5 Game Character</a><a href="http://www.williammalone.com/articles/create-html5-canvas-javascript-game-character" title="HTML5 Game Character"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/thumbnail_003.jpg"></a></li></ul></section><section id="relatedBriefs"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/related-briefs.png" alt="Related Briefs" height="25px" width="215px"><ul><li class="relatedBrief roundedBox"><a href="http://www.williammalone.com/briefs/how-to-draw-rectangle-html5-canvas" title="How do you draw a rectangle on HTML5 canvas?" class="subtleLink briefListing">How do you draw a rectangle on HTML5 canvas?</a></li></ul></section></aside>                        
                        <div id="contentCenter">             		<a name="title"></a><h1>Create a Drawing App with HTML5 Canvas and JavaScript</h1>
                    <div class="author"><span id="by">by</span> William Malone</div>
                    <p></p>
                    <div class="image">
                    	<img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/html5-drawing-tool-example.png" alt="html5 drawing tool example crayon" height="220px" width="490px">
                    </div>
                    <p>This tutorial will take you step by step through 
the development of a simple web drawing application using HTML5 canvas 
and its partner JavaScript. The aim of this article is to explore the 
process of creating a simple app along the way learn:</p>
                    <ul class="standardList">
                    	<li>How to draw dynamically on HTML5 canvas</li>
                    	<li>The future possiblities of HTML5 canvas</li>                        
                    	<li>The current browser compatibility of HTML5 canvas</li>
                    </ul>
                    <p>Each step includes a working demo; if you want to skip ahead:</p>
                    <ul class="standardList">
                    	<li><a href="#demo-simple">Simple Demo</a></li>
                    	<li><a href="#demo-colors">Colors Demo</a></li>                    
                    	<li><a href="#demo-sizes">Sizes Demo</a></li>
                        <li><a href="#demo-tools">Tools Demo</a></li>
                        <li><a href="#demo-outline">Outline Demo</a></li>
                        <li><a href="#demo-complete">Complete Demo</a></li>
                    </ul>
                    <a name="subTitle0"></a><h2>Define Our Objective</h2>
                    
					<p>Let's create a web app where the user can dynamically draw on an
 HTML5 canvas. What will our users use? A coloring book comes to mind; 
that means crayons. Our first tool is a crayon. Although the real world 
doesn't agree, I think we should be able to erase crayons. Our second 
tool will be an eraser (sorry reality). And because I have always have 
been a Sharpie® fan our final tool will be a marker.</p>
                    <p>Our tools could use colors (except maybe our 
eraser). Let's keep it simple, so we give our user 4 different colors to
 choose from.</p>
                    <p>Similarly let's also give our user 4 different sizes to draw with, because we can. To recap our app should have the following:</p>
                    <ul class="standardList">
                    	<li>3 tools: crayon, marker, eraser</li>
                    	<li>4 colors to choose from (except eraser)</li>
                    	<li>4 sizes to choose from</li>                       
                    </ul>
                    <p>Like a coloring book, let's give our user something to "color". I have chosen a favorite of mine: <a href="http://www.watermelonduck.com/" class="watermelonDuck" rel="me" title="Watermelon Duck" target="_blank">Watermelon Duck</a> by Rachel Cruthirds.</p>
                    <a name="subTitle1"></a><h2>Prepare HTML5 Canvas: Markup</h2>
                    
					<p>We only need a line of markup; everything else will be in scripting.</p>
					<pre class="code html">&lt;canvas id="canvasInAPerfectWorld" width="490" height="220"&gt;&lt;/canvas&gt;</pre>
                    <p><em>Wait</em>... HTML5 is still new and some 
browsers (pssst... that means you Internet Explorer) don't support the 
canvas tag, so let's use this line of markup instead:</p>
					<pre class="code html">&lt;div id="canvasDiv"&gt;&lt;/div&gt;</pre>
                    <a name="subTitle2"></a><h2>Prepare HTML5 Canvas: Scripting</h2>
                    
                    <p>To prepare our canvas, we would hope to use:</p>
                    <pre class="code js">context = document.getElementById('canvasInAPerfectWorld').getContext("2d");</pre>
                    <p>However <abbr title="Internet Explorer">IE</abbr> doesn't know what the canvas tag means, and if we used that in our markup, <abbr title="Internet Explorer">IE</abbr> would serve us an entrée of error. Instead we create a canvas element in JavaScript and append it to our div we called <code>canvasDiv</code>.</p>
					<pre class="code js">var canvasDiv = document.getElementById('canvasDiv');
canvas = document.createElement('canvas');
canvas.setAttribute('width', canvasWidth);
canvas.setAttribute('height', canvasHeight);
canvas.setAttribute('id', 'canvas');
canvasDiv.appendChild(canvas);
if(typeof G_vmlCanvasManager != 'undefined') {
	canvas = G_vmlCanvasManager.initElement(canvas);
}
context = canvas.getContext("2d");</pre>
					<p>For Internet Explorer compatibility we will also have to include an additional script: <a href="http://code.google.com/p/explorercanvas/" class="subtleLink" title="HTML5 Canvas for Internet Explorer" target="_self">ExplorerCanvas</a>.</p>
                    <a name="subTitle3"></a><h2>Create a Simple Drawing "Canvas"</h2>
                    
                    <p>Before we add any options, let's tackle the 
basics of dynamically drawing on an HTML5 canvas. It will consist of 4 
mouse events and two functions: <code>addClick</code> to record mouse data and <code>redraw</code> which will draw that data.</p>
                    <p><em>Mouse Down Event:</em> When the user clicks on canvas we record the position in an array via the <code>addClick</code> function. We set the boolean <code>paint</code> to true (we will see why in a sec). Finally we update the canvas with the function <code>redraw</code>.</p>
                    <pre class="code js">$('#canvas').mousedown(function(e){
  var mouseX = e.pageX - this.offsetLeft;
  var mouseY = e.pageY - this.offsetTop;
		
  paint = true;
  addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop);
  redraw();
});</pre>
					<p><em>Mouse Move Event:</em> Just like moving the tip of a marker 
on a sheet of paper, we want to draw on the canvas when our user is 
pressing down. The boolean <code>paint</code> will let us know if the virtual marker is pressing down on the paper or not. If <code>paint</code> is true, then we record the value. Then redraw.</p>
                    <pre class="code js">$('#canvas').mousemove(function(e){
  if(paint){
    addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
    redraw();
  }
});</pre>
					<p><em>Mouse Up Event:</em> Marker is off the paper; <code>paint</code> boolean will remember!</p>
                    <pre class="code js">$('#canvas').mouseup(function(e){
  paint = false;
});</pre>
					<p><em>Mouse Leave Event:</em> If the marker goes off the paper, then forget you!</p>
                    <pre class="code js">$('#canvas').mouseleave(function(e){
  paint = false;
});</pre>
                    <p>Here is the <code>addClick</code> function that will save the click position:</p>
                    <pre class="code js">var clickX = new Array();
var clickY = new Array();
var clickDrag = new Array();
var paint;

function addClick(x, y, dragging)
{
  clickX.push(x);
  clickY.push(y);
  clickDrag.push(dragging);
}</pre>	
					<p>The <code>redraw</code> function is where the magic happens. 
Each time the function is called the canvas is cleared and everything is
 redrawn. We could be more efficient and redraw only certain aspects 
that have been changed, but let's keep it simple.</p>
                    <p>We set a few stroke properties for the color, 
shape, and width. Then for every time we recorded as a marker on paper 
we are going to draw a line.</p>
                    <pre class="code js">function redraw(){
  context.clearRect(0, 0, context.canvas.width, context.canvas.height); // Clears the canvas
  
  context.strokeStyle = "#df4b26";
  context.lineJoin = "round";
  context.lineWidth = 5;
			
  for(var i=0; i &lt; clickX.length; i++) {		
    context.beginPath();
    if(clickDrag[i] &amp;&amp; i){
      context.moveTo(clickX[i-1], clickY[i-1]);
     }else{
       context.moveTo(clickX[i]-1, clickY[i]);
     }
     context.lineTo(clickX[i], clickY[i]);
     context.closePath();
     context.stroke();
  }
}</pre>

                    <a name="demo-simple"></a>
					<a name="subTitle4"></a><h2>Simple Drawing Canvas Demo</h2>
                    
					<p>Give it a try:</p>
                    <p class="demoToolList">Clear the canvas: <button id="clearCanvasSimple" type="button">Clear</button></p>
    				<div class="image">
						<div id="canvasSimpleDiv"><canvas id="canvasSimple" height="220" width="490"></canvas></div>
                    </div>
                    <a name="subTitle5"></a><h2>Add Colors</h2>
                    
					<p>Let's give our user some color choices. To do so, all we need to
 do is add declare a few global variables and update our redraw 
function.</p>
                    <p>Declare four color variables: <code>colorPurple</code>, <code>colorGreen</code>, <code>colorYellow</code>, <code>colorBrown</code> with corresponding hex color values, a variable to store the current color: <code>curColor</code>, and an array to match the chosen color when the user clicked the canvas <code>clickColor</code>.</p>
                        <pre class="code js"><code class="highlight">var colorPurple = "#cb3594";
var colorGreen = "#659b41";
var colorYellow = "#ffcf33";
var colorBrown = "#986928";

var curColor = colorPurple;
var clickColor = new Array();</code></pre>

                    <p>The <code>addClick</code> function needs to be updated to record the chosen color when the user clicks.</p>
                    <pre class="code js">function addClick(x, y, dragging)
{
  clickX.push(x);
  clickY.push(y);
  clickDrag.push(dragging);
  <code class="highlight">clickColor.push(curColor);</code>
}</pre>
                    <p>Since the color can vary now, we need to update the <code>redraw</code> function so it references the color that was active when the user clicked. We move the line about <code>strokeStyle</code> into the for loop and assign it to color value in the new array <code>clickColor</code> that corresponds to the user's clickage.</p>
                    <pre class="code js">function redraw(){
  <code class="highlight delete">/* context.strokeStyle = "#df4b26"; */</code>
  context.lineJoin = "round";
  context.lineWidth = 5;
			
  for(var i=0; i &lt; clickX.length; i++)
  {		
    context.beginPath();
    if(clickDrag[i] &amp;&amp; i){
      contex.moveTo(clickX[i-1], clickY[i-1]);
    }else{
      context.moveTo(clickX[i]-1, clickY[i]);
    }
    context.lineTo(clickX[i], clickY[i]);
    context.closePath();
    <code class="highlight">context.strokeStyle = clickColor[i];</code>
    context.stroke();
  }
}</pre>

                    <a name="demo-colors"></a>
                    <a name="subTitle6"></a><h2>Demo Colors</h2>
                    
					<p>Try it with color choices:</p>
                    <ul class="demoToolList">
                    	<li>Clear the canvas: <button id="clearCanvasSimpleColors" type="button">Clear</button></li>
                    	<li><span class="highlight">Choose a color: </span><button id="choosePurpleSimpleColors" type="button">Purple</button><button id="chooseGreenSimpleColors" type="button">Green</button><button id="chooseYellowSimpleColors" type="button">Yellow</button><button id="chooseBrownSimpleColors" type="button">Brown</button></li>
                    </ul>
    				<div class="image">
						<div id="canvasSimpleColorsDiv"><canvas id="canvasSimpleColors" height="220" width="490"></canvas></div>
                    </div>
                    <a name="subTitle7"></a><h2>Add Sizes</h2>
                    
                    <p>Just like we added colors, let's add some sizes to chose from: "small", "normal", "large", and "huge".</p>
                    <p>We need a couple more global variables: <code>clickSize</code> and <code>curSize</code>.</p>
                    <pre class="code js"><code class="highlight">var clickSize = new Array();
var curSize = "normal";</code></pre>

                    <p>The <code>addClick</code> function needs to be updated to record the chosen size when the user clicks.</p>
                    <pre class="code js">function addClick(x, y, dragging)
{
  clickX.push(x);
  clickY.push(y);
  clickDrag.push(dragging);
  clickColor.push(curColor);
  <code class="highlight">clickSize.push(curSize);
</code>
}</pre>
                    <p>Update the <code>redraw</code> function to handle the new sizes.</p>
                    <pre class="code js">function redraw(){
  context.lineJoin = "round";
  <code class="highlight delete">/* context.lineWidth = 5; */</code>
  for(var i=0; i &lt; clickX.length; i++)
  {		
    context.beginPath();
    if(clickDrag[i] &amp;&amp; i){
      context.moveTo(clickX[i-1], clickY[i-1]);
    }else{
      context.moveTo(clickX[i]-1, clickY[i]);
    }
    context.lineTo(clickX[i], clickY[i]);
    context.closePath();
    context.strokeStyle = clickColor[i];
    <code class="highlight">context.lineWidth = radius;</code>
    context.stroke();
  }
}</pre>
                    <a name="demo-sizes"></a>
                    <a name="subTitle8"></a><h2>Demo Sizes</h2>
                    
					<p>Try it with different sizes:</p>
                    <ul class="demoToolList">
                    	<li>Clear the canvas: <button id="clearCanvasSimpleSizes" type="button">Clear</button></li>
                    	<li>Choose a color: <button id="choosePurpleSimpleSizes" type="button">Purple</button><button id="chooseGreenSimpleSizes" type="button">Green</button><button id="chooseYellowSimpleSizes" type="button">Yellow</button><button id="chooseBrownSimpleSizes" type="button">Brown</button></li>
                        <li><span class="highlight">Choose a size: </span><button id="chooseSmallSimpleSizes" type="button">Small</button><button id="chooseNormalSimpleSizes" type="button">Normal</button><button id="chooseLargeSimpleSizes" type="button">Large</button><button id="chooseHugeSimpleSizes" type="button">Huge</button></li>	
                    </ul>
    				<div class="image">
						<div id="canvasSimpleSizesDiv"><canvas id="canvasSimpleSizes" height="220" width="490"></canvas></div>
                    </div>
                    <a name="subTitle9"></a><h2>Add Tools</h2>
                    
					<p>Crayon, Marker, Eraser. Three tools. Let's make them.</p>
                    <p>The two global variables we need are: <code>clickTool</code> and <code>curTool</code>.</p>
                    <pre class="code js"><code class="highlight">var clickTool = new Array();
var curTool = "crayon";</code></pre>
                    <p>The <code>addClick</code> function needs to be updated to record the chosen tool when the user clicks.</p>
                    <pre class="code js">function addClick(x, y, dragging)
{
  clickX.push(x);
  clickY.push(y);
  clickDrag.push(dragging);
  <code class="highlight">if(curTool == "eraser"){</code>
    <code class="highlight">clickColor.push("white");</code>
  <code class="highlight">}else{</code>
    clickColor.push(curColor);
  <code class="highlight">}</code>
  clickColor.push(curColor);
  clickSize.push(curSize);
}</pre>

                    <p>Update the <code>redraw</code> function to handle the new tools.</p>
                    <pre class="code js">function redraw(){
  context.lineJoin = "round";
  for(var i=0; i &lt; clickX.length; i++)
  {		
    context.beginPath();
    if(clickDrag[i] &amp;&amp; i){
      context.moveTo(clickX[i-1], clickY[i-1]);
    }else{
      context.moveTo(clickX[i]-1, clickY[i]);
    }
    context.lineTo(clickX[i], clickY[i]);
    context.closePath();
    context.strokeStyle = clickColor[i];
    context.lineWidth = radius;
    context.stroke();
  }
  <code class="highlight">if(curTool == "crayon") {</code>
    <code class="highlight">context.globalAlpha = 0.4;</code>
    <code class="highlight">context.drawImage(crayonTextureImage, 0, 0, canvasWidth, canvasHeight);</code>
  <code class="highlight">}</code>
  <code class="highlight">context.globalAlpha = 1;</code>
}</pre>

                    <a name="demo-tools"></a>
                    <a name="subTitle10"></a><h2>Demo Tools</h2>
                    
					<p>Try it with different tools:</p>
                    <ul class="demoToolList">
                    	<li>Clear the canvas: <button id="clearCanvasSimpleTools" type="button">Clear</button></li>
                    	<li>Choose a color: <button id="choosePurpleSimpleTools" type="button">Purple</button><button id="chooseGreenSimpleTools" type="button">Green</button><button id="chooseYellowSimpleTools" type="button">Yellow</button><button id="chooseBrownSimpleTools" type="button">Brown</button></li>
                        <li>Choose a size: <button id="chooseSmallSimpleTools" type="button">Small</button><button id="chooseNormalSimpleSizes" type="button">Normal</button><button id="chooseLargeSimpleTools" type="button">Large</button><button id="chooseHugeSimpleTools" type="button">Huge</button></li>
                        <li><span class="highlight">Choose a tool: </span><button id="chooseCrayonSimpleTools" type="button">Crayon</button><button id="chooseMarkerSimpleTools" type="button">Marker</button><button id="chooseEraserSimpleTools" type="button">Eraser</button></li>
                    </ul>
    				<div class="image">
						<div id="canvasSimpleToolsDiv"><canvas id="canvasSimpleTools" height="220" width="490"></canvas></div>
                    </div>
                    <a name="subTitle11"></a><h2>Add Outline</h2>
                    
					<p>Coloring books provide an outline of something to color: a cute puppy or a hopping bunny. I chose a watermelon duck.</p>
                    <p>First declare a variable <code>outlineImage</code>.</p>
                    <pre class="code js"><code class="highlight">var outlineImage = new Image();</code></pre>

                    <p>Load the outline image.</p>
                    <pre class="code js">function prepareCanvas(){
  ...
  
  <code class="highlight">outlineImage.src = "images/watermelon-duck-outline.png";</code>
}</pre>
                    <p>Update the <code>redraw</code> function to draw the outline image using the canvas context's <code>drawImage</code> method. Its parameters are the image object we loaded, the position we want to draw the image, and the dimensions of the image.</p>

                    <pre class="code js">function redraw(){
  ...
  
  <code class="highlight">context.drawImage(outlineImage, drawingAreaX, drawingAreaY, drawingAreaWidth, drawingAreaHeight);</code>
}</pre>
                    <a name="demo-outline"></a>
                    <a name="subTitle12"></a><h2>Demo Outline</h2>
                    
					<p>Give it try:</p>
                    <ul class="demoToolList">
                    	<li>Clear the canvas: <button id="clearCanvasSimpleOutline" type="button">Clear</button></li>
                    	<li>Choose a color: <button id="choosePurpleSimpleOutline" type="button">Purple</button><button id="chooseGreenSimpleOutline" type="button">Green</button><button id="chooseYellowSimpleOutline" type="button">Yellow</button><button id="chooseBrownSimpleOutline" type="button">Brown</button></li>
                        <li>Choose a size: <button id="chooseSmallSimpleOutline" type="button">Small</button><button id="chooseNormalSimpleSizes" type="button">Normal</button><button id="chooseLargeSimpleOutline" type="button">Large</button><button id="chooseHugeSimpleOutline" type="button">Huge</button></li>
                        <li>Choose a tool: <button id="chooseCrayonSimpleOutline" type="button">Crayon</button><button id="chooseMarkerSimpleOutline" type="button">Marker</button><button id="chooseEraserSimpleOutline" type="button">Eraser</button></li>
                    </ul>
    				<div class="image">
						<div id="canvasSimpleOutlineDiv"><canvas id="canvasSimpleOutline" height="220" width="490"></canvas></div>
                    </div>
                    <a name="subTitle13"></a><h2>Final Details</h2>
                    
					<p>We are almost there! These last details are optional: restrict 
the drawing area to a rectangle on the canvas and use the rest of the 
canvas for our <abbr title="graphic user interface">gui</abbr> (aka buttons).</p>
                    <p>Let's mask the canvas so all drawing is within a the drawing area. We use the <code>clip</code> method with the <code>save</code> and <code>restore</code> methods. This method is not currently supported by Internet Explorer.</p>
                    <pre class="code js">function redraw()
{
  ...
  
  <code class="highlight">context.save();</code>
  <code class="highlight">context.beginPath();</code>
  <code class="highlight">context.rect(drawingAreaX, drawingAreaY, drawingAreaWidth, drawingAreaHeight);</code>
  <code class="highlight">context.clip();</code>
  
  var radius;
  var i = 0;
  for(; i &lt; clickX.length; i++)
  {
    ... 
  }
  <code class="highlight">context.restore();</code>
  ...
} // end redraw function</pre>

                    <p>The last detail is to move all those buttons on 
our canvas. It involves loading images and displaying them based on our 
user interaction. I used standard JavaScript techniques so I won't bore 
you with the details (but it is included in the source code if you are 
interested). And there you have it!</p>
                    <a name="demo-complete"></a>
                    <a name="subTitle14"></a><h2>Complete Demo</h2>
                    
                    <p>Now that we have created an HTML5 canvas drawing app, lets take a break and draw!</p>
					<div class="image">
						<div id="canvasDiv"><canvas id="canvas" height="220" width="490"></canvas></div>
                    </div>
                    <a name="subTitle15"></a><h2>Download Source Code</h2>
                    
                    <ul>
                        <li>Download HTML5 Canvas Drawing App (zip format): <a href="http://www.williammalone.com/articles/create-html5-canvas-javascript-drawing-app/downloads/html5-canvas-drawing-app.zip" title="Download HTML5 Canvas Drawing App">html5-canvas-drawing-app.zip</a></li>
                    </ul>
                    
                    <a name="subTitle16"></a><h2>Examples In Action</h2>
                    <p>If you built something using this article and want to share, <a href="http://www.williammalone.com/contact/" title="contact">please let me know</a>! There are a lot of great applications out there including:</p>
                    <ul>
                    	<li>The Fred Rogers Company's <a href="http://pbskids.org/daniel/stories/something-special-for-dad/" title="Daniel Tiger's Neighborhood" target="_blank">Daniel Tiger's Neighborhood</a></li>
                    	<li><a href="http://kids.sapo.pt/brincar/desenhos_para_colorir/" title="SAPO Kids" target="_blank">SAPO Kids</a></li>
                    </ul>
                    
                    <a name="subTitle17"></a><h2>Updates</h2>
                    <ul>
                    	<li class="update">Download an updated version (slightly different from the article) on GitHub: <a href="https://github.com/williammalone/Simple-HTML5-Drawing-App" title="Download HTML5 Canvas Drawing App at github" target="_blank">github.com/williammalone/Simple-HTML5-Drawing-App</a></li>
                    	<li class="update">A paint bucket tool was added to this app. Demo and source code is available <a href="http://www.williammalone.com/projects/html5-canvas-javascript-drawing-app-with-bucket-tool/" title="HTML5 Canvas Javascript Drawing App with Bucket Tool">here</a>.</li>
                    </ul>


					
									<a name="subTitle18"></a><h2>Related Articles</h2>
									<ul><li><a href="http://www.williammalone.com/articles/html5-canvas-javascript-paint-bucket-tool" title="HTML5 Canvas Paint Bucket">HTML5 Canvas Paint Bucket</a></li><li><a href="http://www.williammalone.com/articles/create-html5-canvas-javascript-sprite-animation" title="HTML5 Sprite Animation Tutorial">HTML5 Sprite Animation Tutorial</a></li><li><a href="http://www.williammalone.com/articles/create-html5-canvas-javascript-game-character" title="HTML5 Game Character">HTML5 Game Character</a></li></ul>
                            <a name="subTitle19"></a><h2>Share this Article</h2>
                            <ul id="contentShareList">
								<li class="twitterShare shareListItem"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/share-twitter.png" title="Share on Twitter" height="22" width="22"></li>
                                <li class="facebookShare shareListItem"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/share-facebook.png" title="Share on FaceBook" height="22" width="22"></li>
                                <li class="diggShare shareListItem"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/share-digg.png" title="Share on Digg" height="22" width="22"></li>
                                <li class="deliciousShare shareListItem"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/share-delicious.png" title="Share on delicious" height="22" width="22"></li>
                                <li class="redditShare shareListItem"><img src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/share-reddit.png" title="Share on Reddit" height="22" width="22"></li>
								<li class="googlePlusOne shareListItem"><div style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px;" id="googlePlusOneDiv"><iframe title="+1" data-gapiattached="true" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/fastbutton.htm" name="I0_1398406414859" id="I0_1398406414859" vspace="0" tabindex="0" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div></li>
                            </ul>                        </div>
                        <div class="clear"></div>
                    </div>
                </div>
			</div>
            <div class="clear"></div>
<footer>
       
<div id="contentEndCap">
                <img id="overFooterLeft" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/foot_left.png" alt="" height="35" width="20">
                <img id="overFooterRight" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/foot_right.png" alt="" height="35" width="20">
                <div id="overFooterCenter"></div> 
            </div>
            <div class="clear"></div>


<ul id="footer">
					<li id="twitter" class="footerIcon"><a href="http://www.twitter.com/williamMalone/" target="_blank" rel="me" title="William Malone's Status on Twitter"></a></li>
					<li id="linkedIn" class="footerIcon"><a href="http://www.linkedin.com/in/williammalone/" target="_blank" rel="me" title="William Malone's Profile on LinkedIn"></a></li>
					<li id="flickr" class="footerIcon"><a href="http://www.flickr.com/williamMalone/" target="_blank" rel="me" title="William Malone's Photos on flickr"></a></li>
					<li id="githubIcon" class="footerIcon"><a href="https://github.com/williammalone" target="_blank" rel="me" title="William Malone's github Repos"></a></li>
					<li id="googleIcon" class="footerIcon"><a href="https://plus.google.com/u/0/118308667806315333482?rel=author" target="_blank" rel="me" title="William Malone's Google Profile"></a></li>
					<li id="rssIcon" class="footerIcon"><a href="http://feeds.feedburner.com/williamMalone" target="_blank" rel="me" title="William Malone's RSS"></a></li>
				</ul>          
<nav id="underFooter">
            	<a href="http://www.williammalone.com/" class="footerNav subtleLink mobileButton" rel="me home" title="Home">Home</a><a href="http://www.williammalone.com/articles/" class="footerNav subtleLink mobileButton" rel="tag" title="Articles">Articles</a><!--<a href="http://www.williammalone.com/briefs/" class="footerNav subtleLink mobileButton" rel="tag" title="Articles">Briefs</a>--><a href="http://www.williammalone.com/works/" class="footerNav subtleLink mobileButton" rel="tag" title="Works">Works</a><a href="http://www.williammalone.com/resume/" class="footerNav subtleLink mobileButton" rel="tag" title="Resume">Resume</a><a href="http://www.williammalone.com/about/" class="footerNav subtleLink mobileButton" rel="tag" title="About">About</a><a href="http://www.williammalone.com/contact/" class="footerNav subtleLink mobileButton" rel="tag" title="Contact">Contact</a><a href="http://feeds.feedburner.com/williamMalone" class="footerNav subtleLink mobileButton" rel="tag me" target="_blank" title="RSS">RSS</a><a href="http://www.williammalone.com/sitemap/" class="subtleLink mobileButton" rel="sitemap tag" title="Sitemap">Sitemap</a>
</nav>

<small id="copyright" role="contentinfo">This site <a href="http://www.williammalone.com/" class="subtleLink" rel="home" title="Home">williammalone.com</a> and its contents <a href="http://creativecommons.org/licenses/by-sa/3.0/" class="subtleLink" title="Creative Commons — Attribution-Share Alike 3.0 Unported" rel="license">copyright</a> © 2014 <a href="http://www.williammalone.com/about/" class="subtleLink" title="William Malone">William Malone</a>. It is not affiliated with, sponsored by, or endorsed by any entity other than yours truely: <a href="http://www.williammalone.com/about/" class="subtleLink" title="William Malone">William Malone</a>.</small>

</footer> 





                
</div><script src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/jquery.js" type="text/javascript"></script><script src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/swfobject.js" type="text/javascript"></script><script src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/root.js" type="text/javascript"></script><script src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/javascript.js" type="text/javascript"></script><script src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/article.js" type="text/javascript"></script><script gapi_processed="true" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/plusone.js" type="text/javascript"></script><iframe tabindex="-1" style="width: 1px; height: 1px; position: absolute; top: -100px;" src="Create%20a%20Drawing%20App%20with%20HTML5%20Canvas%20and%20JavaScript%20%7B%20William%20Malone%20%7D_files/postmessageRelay.htm" id="oauth2relay444020356" name="oauth2relay444020356"></iframe></body><iframe src="" style="display: none;"></iframe></html>